---
export const prerender = true;
import Layout from "../../../layouts/Layout.astro";
import PaginationNav from "../../../components/PaginationNav.astro";
import { excerpt } from "../../../utils/excerpt";
import PostList from "../../../components/PostList.astro";
import { PAGE_SIZE } from "../../../config";
import { getSortedPosts, paginatePosts } from '../../../services/PostService';
import { pagePath, indexPath } from '../../../utils/urls';
import { DEFAULT_LANG, SUPPORTED_LANGS } from "../../../config.i18n";
import { t } from "../../../i18n";

export async function getStaticPaths() {
  const paths: { params: { lang: string; page: string } }[] = [];
  for (const { code } of SUPPORTED_LANGS) {
    if (code === DEFAULT_LANG) continue;
    const sorted = await getSortedPosts(code);
    const totalPages = Math.ceil(sorted.length / PAGE_SIZE);
    
    // Generate paths for pages 2 and beyond (page 1 is handled by [lang]/index.astro)
    for (let page = 2; page <= totalPages; page++) {
      paths.push({
        params: { lang: code, page: String(page) }
      });
    }
  }
  return paths;
}

const { lang, page } = Astro.params;
const currentPage = parseInt(page, 10);
const posts = await getSortedPosts(lang);
const { pageItems: pagePosts, totalPages } = paginatePosts(posts, currentPage, PAGE_SIZE);

const searchData = pagePosts.map((post) => ({
  title: post.data.title,
  description: post.data.description ?? excerpt(post.body),
  slug: post.id,
}));
---
<Layout title={t('page.posts_page', lang).replace('{page}', String(currentPage))}> 
  <Fragment slot="head">
    {currentPage > 1 && (
      <link rel="prev" href={currentPage === 2 ? indexPath(lang) : pagePath(lang, currentPage - 1)} />
    )}
    {currentPage < totalPages && (
      <link rel="next" href={pagePath(lang, currentPage + 1)} />
    )}
  </Fragment>
  <div class="mx-auto p-4">
    <PostList posts={pagePosts} lang={lang} />

    <PaginationNav
      currentPage={currentPage}
      totalPages={totalPages}
      prevHref={currentPage > 1 ? (currentPage === 2 ? indexPath(lang) : pagePath(lang, currentPage - 1)) : undefined}
      nextHref={currentPage < totalPages ? pagePath(lang, currentPage + 1) : undefined}
    />

    <!-- prettier-ignore -->
    <script id="search-data" type="application/json">{JSON.stringify(searchData)}</script>
  </div>
</Layout> 