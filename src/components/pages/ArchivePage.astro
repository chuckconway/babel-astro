---
import Layout from "../../layouts/Layout.astro";
import { formatLongDate } from "../../utils/date";
import { getArchiveGroups } from "../../services/PostService";
import { postPath } from "../../utils/urls";
import { t } from "../../i18n";
import { getReadingTime } from "../../utils/readingTime";

interface Props {
  lang: string;
}

const { lang } = Astro.props as Props;
const groups = await getArchiveGroups(lang);
---

<Layout title={t('page.archive', lang)}>
  <div class="prose prose-lg mx-auto p-4 dark:prose-invert text-content archive-page">
    <p class="not-prose eyebrow mb-2">{t('page.posts', lang)}</p>
    <h1 class="not-prose page-title mb-4 text-content quiet-bold">
      {t('archive.title', lang)}
    </h1>
    {
      groups.map(({ year }) => (
        <section class="mb-8 archive-year-section" id={String(year)}>
          <h2 class="not-prose archive-year-title mb-4 text-content">
            {year}
          </h2>
          <ul class="not-prose list-none space-y-4 pl-2">
            {groups.find(g => g.year === year)?.posts.map((post) => (
              <li>
                <a
                  href={postPath(lang, post.id)}
                  class="not-prose post-list-title text-link-color hover:underline hover:text-link-hover-color"
                >
                  {post.data.title}
                </a>
                <div class="text-sm text-muted-content">
                  {formatLongDate(post.data.date, lang)} â€¢ {getReadingTime(post.body, lang)}
                </div>
              </li>
            ))}
          </ul>
        </section>
      ))
    }
  </div>
</Layout> 